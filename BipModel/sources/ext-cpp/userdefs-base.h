#ifndef GENERATED_ASN1SCC_USERDEFS_BASE_H
#define GENERATED_ASN1SCC_USERDEFS_BASE_H
/*
Code automatically generated by asn1scc tool
*/
#include "taste-types.h"
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef asn1SccT_UInt32 asn1SccDummyBase_T;

#define asn1SccDummyBase_T_REQUIRED_BYTES_FOR_ENCODING       4 
#define asn1SccDummyBase_T_REQUIRED_BITS_FOR_ENCODING        32
#define asn1SccDummyBase_T_REQUIRED_BYTES_FOR_ACN_ENCODING   4 
#define asn1SccDummyBase_T_REQUIRED_BITS_FOR_ACN_ENCODING    32
#define asn1SccDummyBase_T_REQUIRED_BYTES_FOR_XER_ENCODING   47

void asn1SccDummyBase_T_Initialize(asn1SccDummyBase_T* pVal);
flag asn1SccDummyBase_T_IsConstraintValid(const asn1SccDummyBase_T* val, int* pErrCode);


extern const asn1SccT_UInt32 numBase_JointTrajectory;
extern const asn1SccT_UInt32 numStd_orogen_typekits_mtype_std_vector_base_JointTransform;
extern const asn1SccT_UInt32 numStd_orogen_typekits_mtype_std_vector_base_Waypoint;
extern const asn1SccT_UInt32 numStd_orogen_typekits_mtype_std_vector_base_Wrench;
extern const asn1SccT_UInt32 numStd_vector_Wrappers_Vector4d;
extern const asn1SccT_UInt32 numStd_orogen_typekits_mtype_std_vector_base_Trajectory;
extern const asn1SccT_UInt32 numBase_JointLimits_names;
extern const asn1SccT_UInt32 numBase_JointLimits_elements;
extern const asn1SccT_UInt32 numBase_JointsTrajectory_names;
extern const asn1SccT_UInt32 numBase_JointsTrajectory_elements;
extern const asn1SccT_UInt32 numBase_JointsTrajectory_times_val;
extern const asn1SccT_UInt32 numBase_NamedVector_Base_JointLimitRange_names;
extern const asn1SccT_UInt32 numBase_NamedVector_Base_JointLimitRange_elements;
extern const asn1SccT_UInt32 numBase_NamedVector_Base_JointState_names;
extern const asn1SccT_UInt32 numBase_NamedVector_Base_Wrench_names;
extern const asn1SccT_UInt32 numBase_NamedVector_Base_Wrench_elements;
extern const asn1SccT_UInt32 numBase_NamedVector_Base_JointTrajectory_names;
extern const asn1SccT_UInt32 numBase_NamedVector_Base_JointTrajectory_elements;
extern const asn1SccT_UInt32 numBase_samples_DepthMap_timestamps;
extern const asn1SccT_UInt32 numBase_samples_DepthMap_vertical_interval;
extern const asn1SccT_UInt32 numBase_samples_DepthMap_horizontal_interval;
extern const asn1SccT_UInt32 numBase_samples_DepthMap_distances;
extern const asn1SccT_UInt32 numBase_samples_DepthMap_remissions;
extern const asn1SccT_UInt32 numBase_samples_DistanceImage_data;
extern const asn1SccT_UInt32 numBase_commands_Joints_names;
extern const asn1SccT_UInt32 numBase_samples_LaserScan_ranges;
extern const asn1SccT_UInt32 numBase_samples_LaserScan_remission;
extern const asn1SccT_UInt32 numBase_samples_Pointcloud_points;
extern const asn1SccT_UInt32 numBase_samples_Pointcloud_colors;
extern const asn1SccT_UInt32 numBase_samples_Sonar_timestamps;
extern const asn1SccT_UInt32 numBase_samples_Sonar_bearings;
extern const asn1SccT_UInt32 numBase_samples_Sonar_bins;
extern const asn1SccT_UInt32 numBase_samples_SonarBeam_beam;
extern const asn1SccT_UInt32 numBase_samples_SonarScan_data;
extern const asn1SccT_UInt32 numBase_samples_SonarScan_time_beams;
extern const asn1SccT_UInt32 numBase_samples_Wrenches_names;
extern const asn1SccT_UInt32 numBase_samples_Wrenches_elements;
extern const asn1SccT_UInt32 numBase_JointTransformVector_names;
extern const asn1SccT_UInt32 numBase_JointTransformVector_elements;
extern const asn1SccT_UInt32 numBase_NamedVector_Base_JointTransform_names;
extern const asn1SccT_UInt32 numBase_NamedVector_Base_JointTransform_elements;
extern const asn1SccT_UInt32 numBase_samples_frame_Frame_image;
extern const asn1SccT_UInt32 numBase_samples_frame_Frame_attributes;
extern const asn1SccT_UInt32 numWrappers_MatrixXd_data;
extern const asn1SccT_UInt32 numWrappers_VectorXd_data;
extern const asn1SccT_UInt32 numBase_JointTransformVector_m_names;
extern const asn1SccT_UInt32 numBase_NamedVector_base_JointTransform_m_names;
extern const asn1SccT_UInt32 numBase_NamedVector_base_Wrench_m_names;
extern const asn1SccT_UInt32 numBase_samples_Pointcloud_m_points;
extern const asn1SccT_UInt32 numBase_samples_Pointcloud_m_colors;
extern const asn1SccT_UInt32 numBase_samples_Wrenches_m_names;
extern const asn1SccT_UInt32 numWrappers_geometry_Spline_knots;
extern const asn1SccT_UInt32 numWrappers_geometry_Spline_vertices; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

flag asn1SccDummyBase_T_Encode(const asn1SccDummyBase_T* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag asn1SccDummyBase_T_Decode(asn1SccDummyBase_T* pVal, BitStream* pBitStrm, int* pErrCode); 


#ifdef  __cplusplus
}

#endif

#endif
